#!/usr/bin/env python2

import unittest
import urllib2

from shelltoolbox import command


jitsu = command('jitsu')
juju = command('juju')


class DeployTest(unittest.TestCase):

    def setUp(self):
        self.charm = 'juju-gui'
        self.port = '8888'
        juju('deploy', 'local:{0}'.format(self.charm))
        juju('expose', self.charm)
        jitsu(
            'watch', '--failfast', self.charm,
            '--state', 'started', '--open-port', self.port)

    def test_improv(self):
        # Ensure the Juju GUI and improv services are correctly set up.
        address = jitsu('get-service-info', self.charm, 'public-address')
        hostname = address.strip().split(':')[1]
        url = 'http://{0}:{1}'.format(hostname, self.port)
        response = urllib2.urlopen(url)
        self.assertEqual(200, response.getcode())
        ws_url = 'http://{0}:8081/ws'.format(hostname)
        # A bad request status code here means the websocket resource is found.
        # It would take an actual websocket client to properly interact with
        # the websocket server.
        with self.assertRaises(urllib2.HTTPError) as context_manager:
            urllib2.urlopen(ws_url)
        self.assertEqual(400, context_manager.exception.getcode())


if __name__ == '__main__':
    unittest.main(verbosity=2)
