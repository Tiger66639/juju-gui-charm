#!/usr/bin/env python2
# -*- python -*-

import os
from subprocess import (
    CalledProcessError,
    check_call,
    )
import tempfile

# python-shelltoolbox is installed as a dependency of python-charmhelpers.
check_call(['apt-get', 'install', '-y', 'python-charmhelpers'])


# These modules depend on charmhelpers and shelltoolbox being installed so they
# must not be imported until those packages are available.
from charmhelpers import (
    get_config,
    log,
    log_entry,
    log_exit,
)
from shelltoolbox import (
    apt_get_install,
    cd,
    command,
    install_extra_repositories,
    run,
)

from utils import cmd_log


def fetch(juju_gui_branch, juju_api_branch):
    """Install required dependencies and retrieve Juju/Juju GUI branches."""
    log('Installing dependencies.')
    cmd_log(install_extra_repositories('ppa:chris-lea/node.js'))
    cmd_log(
        apt_get_install('bzr', 'imagemagick', 'make',
                        'nodejs', 'npm', 'zookeeper', 'nginx'))
    log('Retrieving source checkouts.')
    bzr_checkout = command('bzr', 'co', '--lightweight')
    cmd_log(bzr_checkout(juju_gui_branch, 'juju-gui'))
    cmd_log(bzr_checkout(juju_api_branch, 'juju'))


def build(logpath):
    """Set up Juju GUI and nginx."""
    log('Building Juju GUI.')
    with cd('juju-gui'):
        logdir = os.path.dirname(logpath)
        fd, name = tempfile.mkstemp(prefix='make-', dir=logdir)
        log('Output from "make" sent to', name)
        run('make', stdout=fd, stderr=fd)
    log('Setting up nginx.')
    nginx_default_site = '/etc/nginx/sites-enabled/default'
    juju_gui_site = '/etc/nginx/sites-available/juju-gui'
    if os.path.exists(nginx_default_site):
        os.remove(nginx_default_site)
    if not os.path.exists(juju_gui_site):
        cmd_log(run('touch', juju_gui_site))
        cmd_log(run('chown', 'ubuntu:', juju_gui_site))
        cmd_log(
            run('ln', '-s', juju_gui_site,
                '/etc/nginx/sites-enabled/juju-gui'))


def main():
    config = get_config()
    fetch(config['juju-gui-branch'], config['juju-api-branch'])
    build(config['command-log-file'])


if __name__ == '__main__':
    log_entry()
    try:
        main()
    except CalledProcessError as e:
        log('Exception caught:')
        log(e.output)
        raise
    finally:
        log_exit()
