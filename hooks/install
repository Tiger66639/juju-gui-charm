#!/usr/bin/env python2
# -*- python -*-

import os
from subprocess import (
    CalledProcessError,
    check_call,
    )

# python-shelltoolbox is installed as a dependency of python-charmhelpers.
check_call(['apt-get', 'install', '-y', 'python-charmhelpers'])


# These modules depend on charmhelpers and shelltoolbox being installed so they
# must not be imported until those packages are available.
from charmhelpers import (
    get_config,
    log,
    log_entry,
    log_exit,
)
from shelltoolbox import (
    apt_get_install,
    install_extra_repositories,
    run,
)

from utils import (
    build,
    cmd_log,
    config_json,
    fetch,
    )


def get_dependencies():
    log('Installing dependencies.')
    cmd_log(install_extra_repositories('ppa:chris-lea/node.js'))
    cmd_log(
        apt_get_install('bzr', 'imagemagick', 'make',
                        'nodejs', 'npm', 'zookeeper', 'nginx'))
    log('Retrieving source checkouts.')
    bzr_checkout = command('bzr', 'co', '--lightweight')
    cmd_log(bzr_checkout(juju_gui_branch, 'juju-gui'))
    cmd_log(bzr_checkout(juju_api_branch, 'juju'))


def main():
    config = get_config()
    get_dependencies()
    fetch(config['juju-gui-branch'], config['juju-api-branch'])
    build(config['command-log-file'])
    config_json.set(config)

if __name__ == '__main__':
    log_entry()
    try:
        main()
    except CalledProcessError as e:
        log('Exception caught:')
        log(e.output)
        raise
    finally:
        log_exit()
