#!/usr/bin/env python2
# -*- python -*-

# Copyright 2012 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

from subprocess import CalledProcessError
import sys

from charmhelpers import (
    get_config,
    log,
    log_entry,
    log_exit,
    service_control,
    STOP,
)
from shelltoolbox import (
    DictDiffer,
    su,
)

from utils import (
    AGENT,
    config_json,
    fetch_api,
    fetch_gui,
    GUI,
    IMPROV,
    save_or_create_certificates,
    setup_gui,
    start_agent,
    start_gui,
    start_improv,
)


def handle_config_changes(config, diff):
    # Handle all configuration file changes.
    log('Updating configuration.')

    added_or_changed = diff.added_or_changed
    juju_api_port = config.get('juju-api-port')
    staging = config.get('staging')

    # The juju_gui_source_changed and juju_api_branch_changed variables
    # control whether we restart the GUI and the API, respectively, at the
    # end of the function.
    juju_gui_source_changed = False
    juju_api_branch_changed = False

    # Fetch new sources?
    if 'juju-gui-source' in added_or_changed:
        juju_gui_source_changed = True
        release_tarball = fetch_gui(
            config['juju-gui-source'], config['command-log-file'])
        setup_gui(release_tarball)
    if 'juju-api-branch' in added_or_changed:
        juju_api_branch_changed = True
        fetch_api(config['juju-api-branch'])

    # Handle changes to SSL certificates.
    ssl_properties = set(
        ['ssl-cert-path', 'ssl-cert-contents', 'ssl-key-contents'])
    if added_or_changed & ssl_properties:
        save_or_create_certificates(
            config['ssl-cert-path'], config.get('ssl-cert-contents'),
            config.get('ssl-key-contents'))

    # Handle changes to the improv server configuration.
    if staging:
        staging_properties = set(
            ['staging', 'staging-environment', 'juju-api-port'])
        staging_changed = added_or_changed & staging_properties
        if staging_changed or juju_api_branch_changed:
            if 'staging' in added_or_changed:
                # 'staging' went from False to True, so the agent server is
                # running and must be stopped.
                current_api = AGENT
            else:
                # Only staging parameters changed, so the existing staging
                # server must be stopped and later restarted.
                current_api = IMPROV
            log('Stopping %s.' % current_api)
            service_control(current_api, STOP)
            # Now the improv server can be cleanly started.
            log('Starting or restarting staging.')
            start_improv(
                juju_api_port,
                staging_env=config['staging-environment'],
                ssl_cert_path=config['ssl-cert-path'])
    else:
        agent_properties = set(['juju-api-port', 'staging'])
        agent_changed = added_or_changed & agent_properties
        if agent_changed or juju_api_branch_changed:
            if 'staging' in added_or_changed:
                # If 'staging' transitions to False we need to stop the backend
                # and start the agent.
                current_api = IMPROV
            else:
                # The agent is still running but the configuration has been
                # updated -- bounce it.
                current_api = AGENT
            service_control(current_api, STOP)
            log('Starting or restarting Juju API agent.')
            start_agent(
                juju_api_port,
                ssl_cert_path=config['ssl-cert-path'])

    # Handle changes to the juju-gui configuration.
    gui_properties = set(
        ['juju-gui-console-enabled', 'juju-api-port', 'staging'])
    gui_changed = added_or_changed & gui_properties
    ssl_cert_path_changed = 'ssl-cert-path' in added_or_changed
    if gui_changed or juju_gui_source_changed or ssl_cert_path_changed:
        with su('root'):
            service_control(GUI, STOP)
        console_enabled = config.get('juju-gui-console-enabled')
        ssl_cert_path = config['ssl-cert-path']
        start_gui(juju_api_port, console_enabled, staging, ssl_cert_path)


def main():
    config = get_config()
    prev_config = config_json.get()
    diff = DictDiffer(config, prev_config)

    if not diff.modified:
        log("No configuration changes, exiting.")
        sys.exit(0)
    handle_config_changes(config, diff)
    config_json.set(config)


if __name__ == '__main__':
    log_entry()
    try:
        main()
    except CalledProcessError as e:
        log('Exception caught:')
        log(e.output)
        raise
    finally:
        log_exit()
